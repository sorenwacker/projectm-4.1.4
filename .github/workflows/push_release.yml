name: push_release

on:
  push:
    tags:
      - "*-release"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Wait On Linux Build
        uses: tomchv/wait-my-workflow@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'linux_build'
          ref: ${{ github.sha }}
          intervalSeconds: 30
          timeoutSeconds: 3600

      - name: Wait On Emscripten Build
        continue-on-error: true
        uses: tomchv/wait-my-workflow@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'emscripten_build'
          ref: ${{ github.sha }}
          intervalSeconds: 30
          timeoutSeconds: 3600

      - name: Wait On macOs Build
        uses: tomchv/wait-my-workflow@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'osx_build'
          ref: ${{ github.sha }}
          intervalSeconds: 30
          timeoutSeconds: 3600

      - name: Wait On Windows Build
        uses: tomchv/wait-my-workflow@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'windows_build'
          ref: ${{ github.sha }}
          intervalSeconds: 60
          timeoutSeconds: 3600

      - name: Download Artifacts From Linux Build
        id: download-linux-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
            github_token: ${{secrets.GITHUB_TOKEN}}
            workflow: build_linux.yml
            workflow_conclusion: success
            path: artifacts
            commit: ${{ github.sha }}
            allow_forks: false
            name: projectm-linux-shared-latest

      - name: Create Linux Package
        run: |
          cd ${{ github.workspace }}/artifacts/projectm-linux-shared-latest
          tar -czvf projectm-linux-x64.tar.gz *
          mv projectm-linux-x64.tar.gz ${{ github.workspace }}/projectm-linux-x64-${{ env.TAG }}.tar.gz

      - name: Download Artifacts From Emscripten Build
        id: download-emscripten-artifact
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build_emscripten.yml
          workflow_conclusion: success
          path: artifacts
          commit: ${{ github.sha }}
          skip_unpack: true
          allow_forks: false
          name: projectm-emscripten-static-latest

      - name: Create Emscripten Package
        continue-on-error: true
        run: |
          mv ${{ github.workspace }}/artifacts/projectm-emscripten-static-latest.zip ${{ github.workspace }}/projectm-emscripten-${{ env.TAG }}.zip

      - name: Download Artifacts From macOS Build
        id: download-osx-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build_osx.yml
          workflow_conclusion: success
          path: artifacts
          commit: ${{ github.sha }}
          allow_forks: false
          name: projectm-osx-shared-latest

      - name: Create macOs Package
        run: |
          cd ${{ github.workspace }}/artifacts/projectm-osx-shared-latest
          tar -czvf projectm-osx-x64.tar.gz *
          mv projectm-osx-x64.tar.gz ${{ github.workspace }}/projectm-osx-x64-${{ env.TAG }}.tar.gz

      - name: Download Artifacts From Windows Build
        id: download-windows-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build_windows.yml
          workflow_conclusion: success
          path: artifacts
          commit: ${{ github.sha }}
          skip_unpack: true
          allow_forks: false
          name: projectm-windows-shared-latest

      - name: Create Windows Package
        run: |
          mv ${{ github.workspace }}/artifacts/projectm-windows-shared-latest.zip ${{ github.workspace }}/projectm-windows-x64-${{ env.TAG }}.zip

      - name: Display Ready Packages
        run: |
          ls -la ${{ github.workspace }}

      # - name: Build Changelog
      #   id: github_release
      #   uses: mikepenz/release-changelog-builder-action@v3
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TAG }}
          tag_name: ${{ env.TAG }}
          # body: |
          #   ${{steps.github_release.outputs.changelog}}
          draft: true
          prerelease: false
          fail_on_unmatched_files: false
          files: |
            projectm-linux-x64-${{ env.TAG }}.tar.gz
            projectm-emscripten-${{ env.TAG }}.zip
            projectm-osx-x64-${{ env.TAG }}.tar.gz
            projectm-windows-x64-${{ env.TAG }}.zip
            