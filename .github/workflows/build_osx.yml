name: macOS (x86_64)

on:
  push:
      branches: 
        - "*"
      tags:
        - "*"
    
  pull_request:
      branches: 
        - "*"

jobs:
  build-intel:
    name: Intel (x86_64) DMG
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Packages
        run: brew install sdl2 ninja googletest boost

      - name: Configure Build
        run: cmake -G "Ninja Multi-Config" -S "${{ github.workspace }}" -B "${{ github.workspace }}/cmake-build" -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install" -DCMAKE_VERBOSE_MAKEFILE=YES -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=YES -DCMAKE_OSX_DEPLOYMENT_TARGET=10.11 -DCMAKE_OSX_ARCHITECTURES=x86_64

      - name: Build Debug
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Debug" --parallel

      - name: Run Unit Tests
        run: ctest --test-dir "${{ github.workspace }}/cmake-build" --verbose --build-config "Debug"

      - name: Build Release
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --parallel

      - name: Install
        run: |
          cmake --build "${{ github.workspace }}/cmake-build" --config "Debug" --target install
          cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --target install

      - name: Create macOS App Bundle
        run: |
          cp -r cmake-build build
          echo "=== Checking build directory structure ==="
          find build/src/sdl-test-ui -type f -name "projectM*" || true
          ls -la build/src/sdl-test-ui/ || true
          ls -la build/src/sdl-test-ui/Release/ || true
          chmod +x create_macos_app.sh
          ./create_macos_app.sh

      - name: Create DMG Installer
        run: |
          chmod +x create_dmg.sh
          ./create_dmg.sh
          mv projectM-v4.1.4-macOS.dmg projectM-v4.1.4-macOS-Intel.dmg

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
            name: projectm-osx-dmg-intel
            path: projectM-v4.1.4-macOS-Intel.dmg

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            name: projectm-osx-shared-latest
            path: install/*

  build-apple-silicon:
    name: Apple Silicon (arm64) DMG
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Packages
        run: brew install sdl2 ninja googletest boost

      - name: Configure Build
        run: cmake -G "Ninja Multi-Config" -S "${{ github.workspace }}" -B "${{ github.workspace }}/cmake-build" -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install" -DCMAKE_VERBOSE_MAKEFILE=YES -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=YES -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_ARCHITECTURES=arm64

      - name: Build Debug
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Debug" --parallel

      - name: Run Unit Tests
        run: ctest --test-dir "${{ github.workspace }}/cmake-build" --verbose --build-config "Debug"

      - name: Build Release
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --parallel

      - name: Install
        run: |
          cmake --build "${{ github.workspace }}/cmake-build" --config "Debug" --target install
          cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --target install

      - name: Create macOS App Bundle
        run: |
          cp -r cmake-build build
          echo "=== Checking build directory structure ==="
          find build/src/sdl-test-ui -type f -name "projectM*" || true
          ls -la build/src/sdl-test-ui/ || true
          ls -la build/src/sdl-test-ui/Release/ || true
          chmod +x create_macos_app.sh
          ./create_macos_app.sh

      - name: Create DMG Installer
        run: |
          chmod +x create_dmg.sh
          ./create_dmg.sh
          mv projectM-v4.1.4-macOS.dmg projectM-v4.1.4-macOS-AppleSilicon.dmg

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
            name: projectm-osx-dmg-arm64
            path: projectM-v4.1.4-macOS-AppleSilicon.dmg

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            name: projectm-osx-shared-arm64
            path: install/*

  build-static:
    name: Static Library
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Packages
        run: brew install sdl2 ninja googletest boost

      - name: Configure Build
        run: cmake -G "Ninja Multi-Config" -S "${{ github.workspace }}" -B "${{ github.workspace }}/cmake-build" -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install" -DCMAKE_VERBOSE_MAKEFILE=YES -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=YES -DCMAKE_OSX_DEPLOYMENT_TARGET=10.11 -DCMAKE_OSX_ARCHITECTURES=x86_64

      - name: Build Debug
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Debug" --parallel

      - name: Run Unit Tests
        run: ctest --test-dir "${{ github.workspace }}/cmake-build" --verbose --build-config "Debug"

      - name: Build Release
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --parallel

      - name: Install
        run: |
          cmake --build "${{ github.workspace }}/cmake-build" --config "Debug" --target install
          cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --target install

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: projectm-osx-static-latest
          path: install/*
